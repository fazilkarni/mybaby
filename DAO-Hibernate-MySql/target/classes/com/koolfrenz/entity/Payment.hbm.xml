<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

	<class name="com.koolfrenz.entity.Payment" table="PAYMENT" >
		<id name="id" column="ID" />
		<discriminator column="dcolumn" type="string" length="5"/>
		<property name="amount" column="AMOUNT" />
		<!-- Following classes are for the concept where only single table is used to store 
		complete class heirarchy. Including all the sub-classes. -->
<!-- 		<subclass name="com.koolfrenz.entity.Check" discriminator-value="CH"> -->
<!-- 			<property name="checkType" column="CHECK_TYPE"/> -->
<!-- 		</subclass> -->
		
<!-- 		<subclass name="com.koolfrenz.entity.CreditCard" discriminator-value="CC"> -->
<!-- 			<property name="creditCardType" column="CREDIT_CARD_TYPE"/> -->
<!-- 		</subclass> -->

		<joined-subclass name="com.koolfrenz.entity.Check" table="CHECK">
			<key column="PARENT_REF"></key>
			<property name="checkType" column="CHECK_TYPE"/>
		</joined-subclass>
		<joined-subclass name="com.koolfrenz.entity.CreditCard" table="CREDIT_CARD">
			<key column="PARENT_REF"></key>
			<property name="creditCardType" column="CREDIT_CARD_TYPE"/>
		</joined-subclass>
		
		<!-- Following configuration for the table per concreate sub classes. No table for parent class -->
		
<!-- 		<union-subclass name="str.CreditCard"> -->
<!-- 			<property name="CreditCardType" column="cctype" length="10" /> -->
<!-- 		</union-subclass> -->
		 
<!-- 		<union-subclass name="str.Cheque"> -->
<!-- 			<property name="ChequeType" column="cqtype" length="10" /> -->
<!-- 		</union-subclass> -->
	</class>
</hibernate-mapping>