package com.intuit.java8.concurrency;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.locks.ReentrantLock;
import java.util.stream.IntStream;

public class ConcurrencyDemo {

	public static void main(String[] args) {
		ConcurrencyDemo obj = new ConcurrencyDemo();
		obj.demoConcurrency();

	}
	
	int count = 0;
	ReentrantLock lock = new ReentrantLock();
	 void incrementSync() {
		lock.lock();
		 	 count = count + 1;
		lock.unlock();
	}
	 
	public void demoConcurrency(){
		ExecutorService executor = Executors.newFixedThreadPool(2);

		IntStream.range(0, 10000)
		    .forEach(i -> executor.submit(this::incrementSync));

		executor.shutdown();

		System.out.println(count);
	}

}
